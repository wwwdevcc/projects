/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GuestImport } from './routes/_guest'
import { Route as IndexImport } from './routes/index'
import { Route as GuestRegisterImport } from './routes/_guest/register'
import { Route as GuestLoginImport } from './routes/_guest/login'
import { Route as GuestForgotPasswordImport } from './routes/_guest/forgot-password'
import { Route as GuestPasswordResetTokenImport } from './routes/_guest/password-reset.$token'

// Create/Update Routes

const GuestRoute = GuestImport.update({
  id: '/_guest',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GuestRegisterRoute = GuestRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => GuestRoute,
} as any)

const GuestLoginRoute = GuestLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => GuestRoute,
} as any)

const GuestForgotPasswordRoute = GuestForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => GuestRoute,
} as any)

const GuestPasswordResetTokenRoute = GuestPasswordResetTokenImport.update({
  id: '/password-reset/$token',
  path: '/password-reset/$token',
  getParentRoute: () => GuestRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestImport
      parentRoute: typeof rootRoute
    }
    '/_guest/forgot-password': {
      id: '/_guest/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof GuestForgotPasswordImport
      parentRoute: typeof GuestImport
    }
    '/_guest/login': {
      id: '/_guest/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestLoginImport
      parentRoute: typeof GuestImport
    }
    '/_guest/register': {
      id: '/_guest/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof GuestRegisterImport
      parentRoute: typeof GuestImport
    }
    '/_guest/password-reset/$token': {
      id: '/_guest/password-reset/$token'
      path: '/password-reset/$token'
      fullPath: '/password-reset/$token'
      preLoaderRoute: typeof GuestPasswordResetTokenImport
      parentRoute: typeof GuestImport
    }
  }
}

// Create and export the route tree

interface GuestRouteChildren {
  GuestForgotPasswordRoute: typeof GuestForgotPasswordRoute
  GuestLoginRoute: typeof GuestLoginRoute
  GuestRegisterRoute: typeof GuestRegisterRoute
  GuestPasswordResetTokenRoute: typeof GuestPasswordResetTokenRoute
}

const GuestRouteChildren: GuestRouteChildren = {
  GuestForgotPasswordRoute: GuestForgotPasswordRoute,
  GuestLoginRoute: GuestLoginRoute,
  GuestRegisterRoute: GuestRegisterRoute,
  GuestPasswordResetTokenRoute: GuestPasswordResetTokenRoute,
}

const GuestRouteWithChildren = GuestRoute._addFileChildren(GuestRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof GuestRouteWithChildren
  '/forgot-password': typeof GuestForgotPasswordRoute
  '/login': typeof GuestLoginRoute
  '/register': typeof GuestRegisterRoute
  '/password-reset/$token': typeof GuestPasswordResetTokenRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof GuestRouteWithChildren
  '/forgot-password': typeof GuestForgotPasswordRoute
  '/login': typeof GuestLoginRoute
  '/register': typeof GuestRegisterRoute
  '/password-reset/$token': typeof GuestPasswordResetTokenRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_guest': typeof GuestRouteWithChildren
  '/_guest/forgot-password': typeof GuestForgotPasswordRoute
  '/_guest/login': typeof GuestLoginRoute
  '/_guest/register': typeof GuestRegisterRoute
  '/_guest/password-reset/$token': typeof GuestPasswordResetTokenRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/password-reset/$token'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/password-reset/$token'
  id:
    | '__root__'
    | '/'
    | '/_guest'
    | '/_guest/forgot-password'
    | '/_guest/login'
    | '/_guest/register'
    | '/_guest/password-reset/$token'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GuestRoute: typeof GuestRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GuestRoute: GuestRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_guest"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_guest": {
      "filePath": "_guest.tsx",
      "children": [
        "/_guest/forgot-password",
        "/_guest/login",
        "/_guest/register",
        "/_guest/password-reset/$token"
      ]
    },
    "/_guest/forgot-password": {
      "filePath": "_guest/forgot-password.tsx",
      "parent": "/_guest"
    },
    "/_guest/login": {
      "filePath": "_guest/login.tsx",
      "parent": "/_guest"
    },
    "/_guest/register": {
      "filePath": "_guest/register.tsx",
      "parent": "/_guest"
    },
    "/_guest/password-reset/$token": {
      "filePath": "_guest/password-reset.$token.tsx",
      "parent": "/_guest"
    }
  }
}
ROUTE_MANIFEST_END */
